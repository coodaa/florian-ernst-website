import { Filename, PortablePath } from '@yarnpkg/fslib';
export declare enum ActionType {
    CREATE = 0,
    DELETE = 1,
    ADD = 2,
    REMOVE = 3,
    MODIFY = 4
}
export declare type FileAction = {
    action: ActionType;
    path: PortablePath;
};
export declare type Consensus = {
    useThirdPerson: boolean;
    useUpperCase: boolean;
    useComponent: boolean;
};
export declare function findVcsRoot(cwd: PortablePath, { marker }: {
    marker: Filename;
}): Promise<PortablePath | null>;
export declare function isYarnFile(path: PortablePath, { roots, names }: {
    roots: Set<string>;
    names: Set<string>;
}): boolean;
export declare function expandDirectory(initialCwd: PortablePath): PortablePath[];
export declare function checkConsensus(lines: Array<string>, regex: RegExp): boolean;
export declare function findConsensus(lines: Array<string>): Consensus;
export declare function getCommitPrefix(consensus: Consensus): "" | "chore(yarn): ";
export declare function genCommitMessage(consensus: Consensus, actions: Array<[ActionType, string]>): string;
